name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # Backend Build und Test
  backend:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "22"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "./backend/package-lock.json"

      - name: Install Backend Dependencies
        working-directory: backend
        run: npm ci

      - name: Lint Backend
        working-directory: backend
        run: npm run lint
        continue-on-error: true

      - name: Test Backend
        working-directory: backend
        run: npm test

      - name: Build Backend
        working-directory: backend
        run: npm run build

  # Frontend Build und Test
  frontend:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "22"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint Frontend
        working-directory: frontend
        run: npm run lint
        continue-on-error: true

      - name: Test Frontend
        working-directory: frontend
        run: npm run test:ci

      - name: Build Frontend
        working-directory: frontend
        run: npm run build

      - name: Upload Frontend Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  # SonarQube Analysis
#  sonarqube:
#    needs: [backend, frontend]
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: SonarQube Scan
#        uses: sonarqube-quality-gate-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # Docker Build and Push
  docker:
    needs: [backend, frontend] #SonarQube wegen Debug entfernt
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Version Tag
        id: version
        run: |
          echo "version=$(date +%Y%m%d)-${{ github.sha:0:7 }}" >> $GITHUB_OUTPUT

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/hello-world-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/hello-world-backend:${{ steps.version.outputs.version }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/hello-world-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/hello-world-frontend:${{ steps.version.outputs.version }}
