name: Deployment Pipeline

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: false
        default: 'latest'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Stop existing containers
            docker compose down || true

            # Pull latest images - FIX: Verwende festen Tag
            docker pull ${{ secrets.DOCKER_USERNAME }}/sprachenlern-app:latest

            # Create .env file
            cat > .env << EOF
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            IMAGE_TAG=latest
            MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}
            MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}
            MONGO_EXPRESS_USERNAME=${{ secrets.MONGO_EXPRESS_USERNAME }}
            MONGO_EXPRESS_PASSWORD=${{ secrets.MONGO_EXPRESS_PASSWORD }}
            GOOGLE_TTS_API_KEY=${{ secrets.GOOGLE_TTS_API_KEY }}
            EOF

            # Create docker-compose.yml on server
            cat > docker-compose.yml << EOF
            version: '3.8'
            services:
              mongodb:
                image: mongo:latest
                environment:
                  MONGO_INITDB_ROOT_USERNAME: \${MONGO_USERNAME}
                  MONGO_INITDB_ROOT_PASSWORD: \${MONGO_PASSWORD}
                  MONGO_INITDB_DATABASE: vocabulary
                ports:
                  - "27017:27017"
                volumes:
                  - mongodb_data:/data/db

              mongo-express:
                image: mongo-express:latest
                environment:
                  ME_CONFIG_MONGODB_SERVER: mongodb
                  ME_CONFIG_MONGODB_PORT: 27017
                  ME_CONFIG_MONGODB_ADMINUSERNAME: \${MONGO_USERNAME}
                  ME_CONFIG_MONGODB_ADMINPASSWORD: \${MONGO_PASSWORD}
                  ME_CONFIG_BASICAUTH_USERNAME: \${MONGO_EXPRESS_USERNAME}
                  ME_CONFIG_BASICAUTH_PASSWORD: \${MONGO_EXPRESS_PASSWORD}
                ports:
                  - "8081:8081"
                depends_on:
                  - mongodb

              app:
                image: \${DOCKER_USERNAME}/sprachenlern-app:\${IMAGE_TAG}
                ports:
                  - "3000:3000"
                environment:
                  MONGODB_URL: mongodb://\${MONGO_USERNAME}:\${MONGO_PASSWORD}@mongodb:27017/vocabulary?authSource=admin
                  GOOGLE_TTS_API_KEY: \${GOOGLE_TTS_API_KEY}
                  NODE_ENV: production
                  AUTO_INIT: true
                depends_on:
                  - mongodb
                volumes:
                  - audio_files:/app/public/audio

            volumes:
              mongodb_data:
              audio_files:
            EOF

            # Start services
            docker compose --env-file .env up -d

            # Health check
            sleep 30
            docker compose ps

            # Test connectivity
            curl -f http://localhost:3000 || echo "Health check failed"

            # Show public IP for reference
            echo "Public IP: $(curl -s ifconfig.me 2>/dev/null || echo 'Unknown')"
            echo "App should be available at: http://$(curl -s ifconfig.me 2>/dev/null):3000"
