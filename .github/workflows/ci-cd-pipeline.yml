name: Complete CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # VollstÃ¤ndige App Build, Test und Delivery Pipeline
  complete-pipeline:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "22"

    steps:
      # 1. Repository Setup
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarQube analysis

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "./app/package-lock.json"

      # 2. Dependencies Installation
      - name: Install App Dependencies
        working-directory: app
        run: npm ci

      # 3. Code Quality Checks
      - name: Lint App
        working-directory: app
        run: npm run lint
        continue-on-error: true

      # 4. Testing with Coverage
      - name: Run App Tests with Coverage
        working-directory: app
        run: npm test

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: app/coverage/

      # 5. Code Quality Analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # 6. Application Build
      - name: Build App
        working-directory: app
        run: npm run build || echo "No build script found"

      # 7. Docker Setup (only on main branch)
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Version Generation
      - name: Generate Version Tag
        if: github.ref == 'refs/heads/main'
        id: version
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          VERSION_TAG=$(date +%Y%m%d)-${SHORT_SHA}
          echo "version=${VERSION_TAG}" >> $GITHUB_OUTPUT

      # 9. Docker Build and Push
      - name: Build and Push App Image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/sprachenlern-app:latest
            ${{ secrets.DOCKER_USERNAME }}/sprachenlern-app:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 10. Pipeline Summary
      - name: Pipeline Summary
        if: always()
        run: |
          echo "CI/CD Pipeline completed!"
          echo "Code Quality: SonarQube scan finished"
          echo "Tests: Coverage reports generated"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Docker: Images built and pushed"
            echo "Version: ${{ steps.version.outputs.version }}"
          else
            echo "Docker: Skipped (not main branch)"
          fi
